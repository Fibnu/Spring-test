<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 扫描指定包（将 @Component 注解的类自动定义为 Spring Bean） -->
    <context:component-scan base-package="com.dc"/>

    <!--配置的是Bean标签,获取对象也是getBean("greetingProxy")    配置一个代理，使用的ProxyFactoryBean -->
    <bean id="greetingProxy" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interfaces" value="com.dc.Apology"/> <!-- 需要代理的接口 -->
        <property name="target" ref="greetingImpl"/>       <!-- 接口实现类 -->
        <property name="interceptorNames">                 <!-- 拦截器名称（也就是增强类名称，Spring Bean 的 id） -->
            <list>
                <value>greetingAroundAdvice</value>
                <value>greetingafterAdvice</value>
                <value>greetingBeforeAdvice</value>
                <value>greetingBeforeAdvice2</value>
                <value>greetingThrowAdvice</value>
                <value>greetingIntroAdvice</value>
            </list>
        </property>
        <!--引入增强时  代理目标类（默认为 false，代理接口） -->
        <property name="proxyTargetClass" value="true"/>  
    </bean>

</beans>