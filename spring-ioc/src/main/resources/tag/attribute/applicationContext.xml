<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

	  <bean id="idclass" class="com.dc.tag.attribute.bean.idclass.HelloWorld" />
	  <!-- abstract 属性作用，让模板配置不用实例化，所以可以配置接口 -->
	  <bean id="attributeparentBean" class="com.dc.tag.attribute.bean.abstractparent.Parent" abstract="true">
	  	<property name="name" value="xiaoming"/>
	  	<property name="age" value="28"/>
	  </bean>
	  <bean id="attributeBean" class="com.dc.tag.attribute.bean.abstractparent.Child" parent="attributeparentBean">
	  	<property name="sex" value="男"/>
	  </bean>
	  <!-- autowire 属性作用： 有5个值  no,byName,byType,constructor,default(采用父级标签即beans的default-autowire属性)  -->
	  <!-- autowire-candidate属性，设置为false时，表示不参与自动注入 -->
	  <bean id="AutowireSyaHelloOne" class="com.dc.tag.attribute.bean.autowire.AutowireSyaHelloOne" autowire-candidate="false"/>
	  <bean id="AutowireSyaHelloTwo" class="com.dc.tag.attribute.bean.autowire.AutowireSyaHelloTwo"/>
	  <bean id="autowireHello" class="com.dc.tag.attribute.bean.autowire.AutowireHello" autowire="byType"/>
	  
	  <!-- depend-on 依赖，表示一个Bean(A)实例化之前需要先实例化另一个bean对象(B)，
	  		什么情况下使用，在A不需要使用B实例的的情况下，只能用depend-on，如果需要使用B实例，则可以使用构造函数.
	  		
	  		用来确定bean定义中依赖关系不明确或者没有直接依赖关系时，指定bean在初始化或销毁时的明确顺序。
	   -->
	  <bean id="dependOnHello1" class="com.dc.tag.attribute.bean.dependon.DependOnHello1" init-method="init" destroy-method="destory"/>
	  <bean id="dependOnHello2" class="com.dc.tag.attribute.bean.dependon.DependOnHello2" init-method="init" destroy-method="destory" depends-on="dependOnHello1"/>
		
		
</beans>